#!/usr/bin/env bash

# Source the common helpers script.
source scripts/common.bash

printf "${yellow}"
print_banner "Python 3"
printf "${normal}\n"
# add -s for verbose output

execute_command_checked "./exec-reqs-install.sh > /dev/null 2>&1"

# clean up any precompiled code before the tests are executd
find . -name "__pycache__" -exec rm -rf {} \; >& /dev/null
find . -name "*.py?" -exec rm {} \;           >& /dev/null

options=(
    --cov-report=term
    --cov-report=term-missing
    --cov-report=html
    --cov-report=xml
    --cov=configparserenhanced
    )

python3 -m pytest ${options[@]}
err=$?

echo -e ""
if [ $err != 0 ]; then
    printf "${red}"
    print_banner "TESTING FAILED"
    printf "${normal}"
else
    printf "${green}"
    print_banner "TESTING PASSED"
    printf "${normal}"
fi
echo -e ""

# Check the example(s)
execute_command_checked "pushd examples"
execute_command_checked "python3 ConfigParserEnhanced-example-01.py >& _test-example-01.log"
execute_command_checked "popd"

# Check installation works
execute_command_checked "python3 -m pip install --user . >& _test-install.log"
execute_command_checked "python3 -m pip uninstall -y configparserenhanced >& _test-uninstall.log"


# Clean up generated bytecode
if [ $err -eq 0 ]; then
    execute_command "find . -name '__pycache__' -exec rm -rf {} \;          > /dev/null 2>&1"
    execute_command "find . -name '*.py?' -exec rm {} \;                    > /dev/null 2>&1"
    execute_command "find . -depth 2 -name '_example-*.ini' -exec rm {} \;  > /dev/null 2>&1"
    execute_command "find . -maxdepth 2 -name '_test-*.log' -exec rm {} \;  > /dev/null 2>&1"
    execute_command "find . -maxdepth 1 -name '___*.ini' -exec rm {} \;     > /dev/null 2>&1"
fi


exit $err
